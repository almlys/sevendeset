<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE bootstrap SYSTEM "http://7d7.almlys.org/spec/draft/BootStrap.dtd">
<bootstrap default_target='sd7'>

	<module name='cg' ignore='no'>
		<comment>
			Unfortunately the next library is not Open Source
			This is the 32 bits version of the library
			Check: http://developer.nvidia.com/object/cg_toolkit.html for more info
			Note: Ogre can be compiled without the cg library, but well, you now how things will look without it.
		</comment>
		<license>Propietary</license>
		<source addr='http://developer.download.nvidia.com/cg/Cg_2.0/2.0.0010/Cg-2.0_Dec2007_x86.tar.gz' method='wget' renamefrom='usr' md5='f6191a01b22f29f7df0b1e1a013aa971' platform='linux' arch='i686' />
		<source addr='http://developer.download.nvidia.com/cg/Cg_2.0/2.0.0010/Cg-2.0_Dec2007_x86_64.tar.gz' method='wget' renamefrom='usr' md5='f6191a01b22f29f7df0b1e1a013aa971' platform='linux' arch='x86_64' />
		<install>
			<cmd>cp -rvp * $PREFIX</cmd>
		</install>
	</module>
	
	<module name='ilmbase' ignore='no'>
		<comment>
			Base library for openEXR
		</comment>
		<license>BSD</license>
		<source addr='http://download.savannah.nongnu.org/releases/openexr/ilmbase-1.0.1.tar.gz' method='wget' renamefrom='ilmbase-1.0.1' md5='f76f094e69a6079b0beb93d97e2a217e'/>
		<build>
			<cmd>./configure --prefix=$PREFIX</cmd>
			<cmd>make -j 2</cmd>
		</build>
		<install>
			<cmd>make install</cmd>
		</install>
	</module>
	
	<module name='openexr' ignore='no' depends='ilmbase'>
		<comment>
			Optional Library for OpenEXR HDR image file format
		</comment>
		<license>BSD</license>
		<source addr='http://download.savannah.nongnu.org/releases/openexr/openexr-1.6.1.tar.gz' method='wget' renamefrom='openexr-1.6.1' md5='11951f164f9c872b183df75e66de145a'/>
		<build>
			<cmd>./configure --prefix=$PREFIX</cmd>
			<cmd>make -j 2</cmd>
		</build>
		<install>
			<cmd>make install</cmd>
		</install>
	</module>

	<module name='ois' ignore='no'>
		<comment>
			Object Oriented Input System
		</comment>
		<license>zlib/libpng</license>
		<source addr='http://prdownloads.sourceforge.net/wgois/ois-1.0RC1.tar.gz' method='wget' renamefrom='ois-1.0RC1' md5='05cbd131fb0477e1cbd4b115ccef2c90'/>
		<patch addr='ois.patch' />
		<build>
			<cmd>./bootstrap</cmd>
			<cmd>./configure --prefix=$PREFIX</cmd>
			<cmd>make -j 2</cmd>
		</build>
		<install>
			<cmd>make install</cmd>
		</install>
	</module>

	<module name='cegui' ignore='no'>
		<comment>
			GUI
		</comment>
		<license>MIT</license>
		<source addr='http://prdownloads.sourceforge.net/crayzedsgui/CEGUI-0.5.0b.tar.gz' method='wget' renamefrom='CEGUI-0.5.0' md5='b42322a33c6a06eede76b15f75694a17'/>
		<build>
			<cmd>./configure --prefix=$PREFIX --without-ogre-renderer</cmd>
			<cmd>make -j 2</cmd>
		</build>
		<install>
			<cmd>make install</cmd>
		</install>
	</module>
	
	
	<module name='ogre' ignore='no' depends='cg,openexr,cegui,ois'>
		<comment>
			The mother of the world
		</comment>
		<license>LGPLv2.1 or later</license>
		<!-- <source addr='http://prdownloads.sourceforge.net/ogre/ogre-linux_osx-v1-4-5.tar.bz2' method='wget' renamefrom='ogrenew' md5='efce9ce9e2b0e2d593e45479210bd4af' /> -->
		<source addr='http://prdownloads.sourceforge.net/ogre/ogre-linux_osx-v1-4-6.tar.bz2' method='wget' renamefrom='ogrenew' md5='ef1cf73106e0387624bfdd539cdf9de6' />
		<!-- Some patches should be added here!! -->
		<build>
			<cmd>./configure --prefix=$PREFIX --enable-openexr</cmd>
			<cmd>make -j 2</cmd>
		</build>
		<install>
			<cmd>make install</cmd>
		</install>
	</module>

	<module name='gccxml' ignore='no'>
		<comment>
			C++ to xml generator
			Latest stable version is too old, soo we need to get latest **unstable** from cvs (cross fingers)
		</comment>
		<license>GPLv2 or later</license>
		<source addr=':pserver:anoncvs@www.gccxml.org:/cvsroot/GCC_XML' method='cvs' module='gccxml' />
		<build>
			<cmd cmd='mkdir' path='gccxml-build' />
			<cmd cmd='cd' path='gccxml-build' />
			<cmd>cmake ../ -DCMAKE_INSTALL_PREFIX:PATH=$PREFIX</cmd>
			<cmd>make</cmd>
		</build>
		<install>
			<cmd cmd='cd' path='gccxml-build' />
			<cmd>make install</cmd>
		</install>
	</module>
	
	<module name='pygccxml' ignore='no' depends='gccxml'>
		<comment>
			py++
			Code generator for Boost.Python
		</comment>
		<license>Boost</license>
		<source addr='https://pygccxml.svn.sourceforge.net/svnroot/pygccxml' method='svn' />
		<install>
			<cmd cmd='cd' path='pygccxml_dev' />
			<cmd>python setup.py install --prefix=$PREFIX</cmd>
			<cmd cmd='cd' path='../pyplusplus_dev' />
			<cmd>python setup.py install --prefix=$PREFIX</cmd>
		</install>
	</module>

	<module name='scons' ignore='no'>
		<comment>
			Build tool, required to build some packages
			python setup.py install --prefix=$PREFIX
		</comment>
		<license>MIT</license>
		<source addr='http://prdownloads.sourceforge.net/scons/scons-0.97.0d20071212.tar.gz' method='wget' renamefrom='scons-0.97.0d20071212' md5='d06327b77552ac0153bb8f93b27b7f13' />
		<install>
			<cmd>python setup.py install --prefix=$PREFIX</cmd>
		</install>
	</module>

	<module name='boost' ignore='no' depends='pygccxml'>
		<comment>
			Boost Libraries
			# Need to patch??
		</comment>
		<license>Boost</license>
		<source addr='http://downloads.sourceforge.net/boost/boost_1_34_1.tar.bz2' method='wget' renamefrom='boost_1_34_1' md5='2d938467e8a448a2c9763e0a9f8ca7e5' />
		<patch addr='boost.patch' />
		<build>
			<!-- Begin Dirty Hack -->
			<cmd>cp -v ../pygccxml/pyplusplus_dev/indexing_suite_v2/indexing/*.hpp boost/python/suite/indexing</cmd>
			<cmd>cp -rv ../pygccxml/pyplusplus_dev/indexing_suite_v2/src/indexing libs/python/src</cmd>
			<!-- End Dirty Hack -->
			<cmd>./configure --with-libraries=python --prefix=$PREFIX</cmd>
			<cmd>make</cmd>
		</build>
		<install>
			<cmd>make install</cmd>
		</install>
	</module>

	
	<module name='python-ogre' ignore='no' depends='ogre,pygccxml,scons,boost'>
		<comment>
			Python-Ogre
		</comment>
		<license>LGPLv2 or lather</license>
		<source addr='https://python-ogre.svn.sourceforge.net/svnroot/python-ogre/trunk/python-ogre' method='svn' />
		<patch addr='python-ogre.patch' />
		<build>
			<cmd>echo "OK. LONG BUILD PROCESS STARTS NOW!!! - LEFT YOUR COMPUTER ON, AND COME TOMORROW!!"</cmd>

			<cmd cmd='cd' path='code_generators/ogre' />
			<cmd>echo "Generating Ogre Code ......."</cmd>
			<cmd>python generate_code.py</cmd>
			<cmd cmd='cd' path='../..' />
			
			<cmd cmd='cd' path='code_generators/cegui' />
			<cmd>echo "Generating CEGUI Code ......."</cmd>
			<cmd>python generate_code.py</cmd>
			<cmd cmd='cd' path='../..' />

			<cmd cmd='cd' path='code_generators/ois' />
			<cmd>echo "Generating OIS Code ......."</cmd>
			<cmd>python generate_code.py</cmd>
			<cmd cmd='cd' path='../..' />

			<cmd>echo "Building Ogre ......."</cmd>
			<cmd>scons PROJECTS="ogre"</cmd>

			<cmd>echo "Building CEGUI ......."</cmd>
			<cmd>scons PROJECTS="cegui"</cmd>
			
			<cmd>echo "Building OIS ......."</cmd>
			<cmd>scons PROJECTS="ois"</cmd>

			<cmd>echo "CONGRATULATIONS!!, everything has sucessfully being build!!!!"</cmd>
		</build>
		
		<install>
			<cmd>cp -rfv packages_2.5/ogre/gui/betagui packages_2.4/ogre/gui</cmd>
			<cmd>cp -rfv packages_2.5/ogre/physics/bullet packages_2.4/ogre/physics</cmd>
			<cmd>cp -rfv packages_2.5/ogre/physics/PhysX packages_2.4/ogre/physics</cmd>
			<cmd>cp -rfv packages_2.5/ogre/physics/NxOgre packages_2.4/ogre/physics</cmd>
			<cmd>cp -rfv packages_2.5/ogre/physics/OgreBulletC packages_2.4/ogre/physics</cmd>
			<cmd>cp -rfv packages_2.5/ogre/physics/OgreBulletD packages_2.4/ogre/physics</cmd>
			<cmd>cp -rfv packages_2.5/ogre/addons packages_2.4/ogre</cmd>
			<cmd>cp -rfv packages_2.5/ogre/gui/navi packages_2.4/ogre/gui</cmd>
			<cmd>python setup.py install --prefix=$PREFIX</cmd>
		</install>
	</module>
	
	<module name='sd7' depends='python-ogre' >
		<comment>
			sd7 real time 3d engine
		</comment>
		<license>GPLv3 or later</license>
	</module>
	
	<module name='binary_depends' ignore='no'>
		<comment>
			Big package that contains all the above stuff mixed in one item
		</comment>
		<license>GPLv3 or later</license>
		<source addr='http://7d7.almlys.org/builds/runtime.tar.bz2' method='wget' renamefrom='runtime' md5='3b00c3a2591fa481ea54a8e7a4fda288' platform='linux' arch='i686' />
		<install>
			<cmd>cp -rvp * $PREFIX</cmd>
		</install>
	</module>
	
</bootstrap>
